{
    "openapi": "3.0.0",
    "info": {
        "title": "API",
        "description": "Api for all the function",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "description": "Returns a list of all categories.",
                "operationId": "getCategoriesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "New Category"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-28 12:00:00"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-28 12:00:00"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Creates a new category in the database.",
                "operationId": "createCategory",
                "requestBody": {
                    "description": "Category object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New Category"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "interger",
                                            "example": "1"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "New Category"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieve a category by ID",
                "description": "Returns a single category based on its ID.",
                "operationId": "getCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Category Name"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update an existing category",
                "description": "Updates a category based on its ID.",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated category object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Category Name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Category Name"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "description": "Deletes a category based on its ID.",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/chefs": {
            "get": {
                "tags": [
                    "Chefs"
                ],
                "summary": "Get all chefs",
                "description": "Returns a list of all chefs.",
                "operationId": "getChefsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "signature_dish": {
                                                "type": "string",
                                                "example": "Spaghetti"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-28 12:00:00"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-28 12:00:00"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Chefs"
                ],
                "summary": "Create a new chef",
                "description": "Creates a new chef in the database.",
                "operationId": "createChef",
                "requestBody": {
                    "description": "Chef object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Chef created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/chefs/{id}": {
            "get": {
                "tags": [
                    "Chefs"
                ],
                "summary": "Retrieve a chef by ID",
                "description": "Returns a single chef based on its ID.",
                "operationId": "getChefById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the chef to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chef retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Chef not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Chefs"
                ],
                "summary": "Update an existing chef",
                "description": "Updates a chef based on its ID.",
                "operationId": "updateChef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the chef to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Chef object data to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated John Doe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Chef updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Updated John Doe"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Chef not found"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Chefs"
                ],
                "summary": "Delete a chef",
                "description": "Deletes a chef based on its ID.",
                "operationId": "deleteChef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the chef to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Chef successfully deleted"
                    },
                    "404": {
                        "description": "Chef not found"
                    }
                }
            }
        },
        "/api/ingredients": {
            "get": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Get all ingredients",
                "description": "Returns a list of all ingredients.",
                "operationId": "getIngredientsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "new ingredient"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-28 12:00:00"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-28 12:00:00"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Create a new ingredient",
                "description": "Creates a new ingredient in the database.",
                "operationId": "createIngredient",
                "requestBody": {
                    "description": "Ingredient object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New Ingredient"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ingredient created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "New Ingredient"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/ingredients/{id}": {
            "get": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Retrieve a specific ingredient",
                "description": "Returns a single ingredient based on its ID.",
                "operationId": "getIngredient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ingredient to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingredient retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "New Ingredient"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ingredient not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Update an existing ingredient",
                "description": "Updates an ingredient based on its ID.",
                "operationId": "updateIngredient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ingredient to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Ingredient object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Ingredient"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-06-28 12:00:00"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-06-28 12:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ingredient updated successfully"
                    },
                    "404": {
                        "description": "Ingredient not found"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Delete an existing ingredient",
                "description": "Deletes an ingredient based on its ID.",
                "operationId": "deleteIngredient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ingredient to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Ingredient successfully deleted"
                    },
                    "404": {
                        "description": "Ingredient not found"
                    }
                }
            }
        },
        "/api/recipe-categories": {
            "get": {
                "tags": [
                    "Recipe Categories"
                ],
                "summary": "Get all recipe categories",
                "description": "Returns a list of all recipe categories with associated recipes and categories.",
                "operationId": "getRecipeCategoriesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "Recipe": {
                                                "type": "string",
                                                "example": "Recipe Name"
                                            },
                                            "Category": {
                                                "type": "string",
                                                "example": "Category Name"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Recipe Categories"
                ],
                "summary": "Store new recipe category associations",
                "description": "Creates new associations between recipes and a category in the database.",
                "operationId": "storeRecipeCategory",
                "requestBody": {
                    "description": "RecipeCategory object containing recipe IDs and category ID",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "recipe_id",
                                    "category_id"
                                ],
                                "properties": {
                                    "recipe_id": {
                                        "description": "Array of recipe IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully categorize recipe(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully categorize recipe."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/recipes": {
            "get": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Get all recipes",
                "description": "Returns a list of all recipes.",
                "operationId": "getRecipesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "New Recipe"
                                            },
                                            "chef_id": {
                                                "type": "interger",
                                                "example": "1"
                                            },
                                            "unique_code": {
                                                "type": "string",
                                                "example": "UNI123"
                                            },
                                            "popularity": {
                                                "type": "interger",
                                                "example": "10"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-28 12:00:00"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-28 12:00:00"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Create a new recipe",
                "description": "Creates a new recipe in the database.",
                "operationId": "createRecipe",
                "requestBody": {
                    "description": "Recipe object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "chef_id",
                                    "unqiue_code"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New recipe"
                                    },
                                    "chef_id": {
                                        "type": "interger",
                                        "example": "1"
                                    },
                                    "unique_code": {
                                        "type": "string",
                                        "example": "UNI234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Recipe created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "New Recipe"
                                        },
                                        "chef_id": {
                                            "type": "interger",
                                            "example": "1"
                                        },
                                        "unique_code": {
                                            "type": "string",
                                            "example": "UNI123"
                                        },
                                        "popularity": {
                                            "type": "interger",
                                            "example": "10"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/recipes/{recipe}": {
            "get": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Retrieve a recipe by ID",
                "description": "Returns a single recipe based on its ID.",
                "operationId": "getRecipeById",
                "parameters": [
                    {
                        "name": "recipe",
                        "in": "path",
                        "description": "ID of recipe to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recipe retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "New Recipe"
                                        },
                                        "chef_id": {
                                            "type": "interger",
                                            "example": "1"
                                        },
                                        "unique_code": {
                                            "type": "string",
                                            "example": "UNI123"
                                        },
                                        "popularity": {
                                            "type": "interger",
                                            "example": "10"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recipe not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Update an existing recipe",
                "description": "Updates a recipe based on its ID.",
                "operationId": "updateRecipe",
                "parameters": [
                    {
                        "name": "recipe",
                        "in": "path",
                        "description": "ID of recipe to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Recipe object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "chef_id",
                                    "unqiue_code"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated recipe"
                                    },
                                    "chef_id": {
                                        "type": "interger",
                                        "example": "1"
                                    },
                                    "unique_code": {
                                        "type": "string",
                                        "example": "UNI234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Recipe created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Updated] Recipe"
                                        },
                                        "chef_id": {
                                            "type": "interger",
                                            "example": "1"
                                        },
                                        "unique_code": {
                                            "type": "string",
                                            "example": "UNI123"
                                        },
                                        "popularity": {
                                            "type": "interger",
                                            "example": "10"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-06-28 12:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recipe not found"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Delete a recipe",
                "description": "Deletes a recipe based on its ID.",
                "operationId": "deleteRecipe",
                "parameters": [
                    {
                        "name": "recipe",
                        "in": "path",
                        "description": "ID of recipe to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Recipe successfully deleted"
                    },
                    "404": {
                        "description": "Recipe not found"
                    }
                }
            }
        },
        "/api/recipes/{recipe}/save-ingredients": {
            "post": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Save ingredients for a recipe",
                "description": "Associates ingredients with a recipe based on recipe ID.",
                "operationId": "saveRecipeIngredients",
                "parameters": [
                    {
                        "name": "recipe",
                        "in": "path",
                        "description": "ID of recipe to associate ingredients with",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "RecipeIngredient object containing ingredient IDs",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ingredient_id"
                                ],
                                "properties": {
                                    "ingredient_id": {
                                        "description": "Array of ingredient IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully saved recipe ingredients",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully saved recipe ingredients."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        }
    }
}